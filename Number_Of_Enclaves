class Solution {
    private:
    void dfs(vector<vector<int>>&grid,int row,int col)
    { grid[row][col]=0;
        int n=grid.size(),m=grid[0].size();
        int delrow[]={-1,0,1,0};
        int delcol[]={0,1,0,-1};
        for(int k=0;k<4;k++)
        {
            int nrow=row+delrow[k];
            int ncol=col+delcol[k];
            if(nrow>=0&& nrow<n && ncol>=0 && ncol<m && grid[nrow][ncol]==1)
            {
                grid[nrow][ncol]=0;
                dfs(grid,nrow,ncol);
            }
        }
    }
public:
    int numEnclaves(vector<vector<int>>& grid) {
        int n=grid.size(),m=grid[0].size();
        for(int j=0;j<m;j++)
        {
            if(grid[0][j]==1)
            dfs(grid,0,j);
            if(grid[n-1][j]==1)
            dfs(grid,n-1,j);
        }
        for(int i=0;i<n;i++)
        {
            if(grid[i][0]==1)
            dfs(grid,i,0);
            if(grid[i][m-1]==1)
            dfs(grid,i,m-1);
        }
        int c=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1)
                c++;
            }
        }
        return c;
    }
};
